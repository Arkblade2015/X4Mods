<aiscript name="reactionforce" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://x4libonline.ddns.net/libraries/aiscripts.xsd" version="1">
    <!-- Setup context menu order-->
    <order id="ReactionForce" name="Reaction Force" description="Reacts to enemies attacking your assets nearby." category="combat" infinite="true">
        <params>
            <!-- Where the reaction force will base itself -->
            <param name="home" default="this.sector" type="object" text="Home" comment="Home Sector/Station">
                <input_param name="class" value="if this.ship.isclass.[class.ship_s, class.ship_xs] then [class.sector, class.station, class.ship_m, class.ship_l, class.ship_xl] else [class.sector, class.station, class.ship_l, class.ship_xl]"/>
            </param>
            <!-- Should we dock when idle? -->
            <param name="dockWhenIdle" type="bool" default="false" text="Dock When Idle" comment="When idle should we dock. If false or home is not a station we will patrol our home system."/>
            <!-- Max range this force will respond -->
            <param name="responseRange" default="1" type="number" text="Response Range (Jumps)" comment="Max range this force will respond from home.">
                <input_param name="startvalue" value="0"/>
                <input_param name="min" value="0"/>
                <input_param name="max" value="[this.ship.pilot.skill.piloting / 2, 3].max"/>
                <input_param name="step" value="1"/>
            </param>
            <!-- Respond to ships? -->
            <param name="shipResponse" type="bool" default="true" text="Respond To Ships" comment="Should we respond to ships that are under attack?"/>
            <!-- What percent of remaining hp/shields should get a response -->
            <param name="hpCutoffShip" default="1" type="number" text="HP% Response Point (Ships)" comment="The HP (Hull + Shield) Percentage to trigger a response.">
                <input_param name="startvalue" value="85"/>
                <input_param name="min" value="1"/>
                <input_param name="max" value="99"/>
                <input_param name="step" value="1"/>
            </param>
            <!-- Respond to stations? -->
            <param name="stationResponse" type="bool" default="true" text="Respond To Stations" comment="Should we respond to stations that are under attack?"/>
            <!-- What percent of remaining hp/shields should get a response -->
            <param name="hpCutoffStation" default="1" type="number" text="HP% Response Point (Stations)" comment="The HP (Hull + Shield) Percentage to trigger a response.">
                <input_param name="startvalue" value="98"/>
                <input_param name="min" value="1"/>
                <input_param name="max" value="99"/>
                <input_param name="step" value="1"/>
            </param>
            <!-- Respond to player? -->
            <param name="playerResponse" type="bool" default="true" text="Respond To Player" comment="Should we respond to the player?"/>
            <!-- Would you like to receive a notification when this ship is dispatched? -->
            <param name="notifyMe" type="bool" default="false" text="Enable Notifications" comment="Would you like to get notifications when this ship is dispatched?"/>
        </params>
        <requires>
            <match shiptype="shiptype.lasertower" negate="true"/>
        </requires>
    </order>
    <interrupts>
        <handler ref="SectorChangeHandler"/>
        <handler ref="ScannedHandler"/>
        <handler ref="InspectedHandler"/>
        <handler ref="TargetInvalidHandler"/>
        <handler ref="ResupplyHandler"/>
        <!-- If player owned object is attacked, check if it is in range of the reaction force -->
        <handler>
            <conditions>
                <event_player_owned_attacked/>
                <!-- Make sure it's a ship or station -->
                <check_value value="event.object.isclass.station or event.object.isclass.ship"/>
                <!-- Make sure it's not a drone -->
                <check_value value="not event.object.isclass.ship or event.object.typename != 'Drone'"/>
                <!-- Check damage (Ignore if in sector) -->
                <check_value value="(event.object.isclass.station and $stationResponse == true and (event.object.hullpercentage + event.object.shieldpercentage) lt ($hpCutoffStation + ($hpCutoffStation * (event.object.maxshield != 0)))) or
                (event.object.isclass.ship and $shipResponse == true and (event.object.hullpercentage + event.object.shieldpercentage) lt ($hpCutoffShip + ($hpCutoffShip * (event.object.maxshield != 0)))) or
                event.object.sector == this.sector"/>
                <!-- Check if player -->
                <check_value value="event.object != player.controlled or $playerResponse"/>
            </conditions>
            <actions>
                <do_if value="$responseTarget == null and event.object != this.ship">
                    <do_if value="$home.isclass.space">
                        <set_value name="$base" exact="$home"/>
                    </do_if>
                    <do_else>
                        <set_value name="$base" exact="$home.sector"/>
                    </do_else>
                    <set_value name="$distance" exact="$base.gatedistance.{event.object.sector}"/>
                    <do_if value="$responseRange ge $distance">
                        <debug_text text="'SHIB Reaction Force - Range Check (%s Actual - %s Max)'.[$distance, $responseRange]"/>
                        <debug_text text="'SHIB Reaction Force - Attack checks passed, setting response target - %s - For response force - %s'.[event.object.knownname, this.ship.knownname]"/>
                        <set_value name="$responseTarget" exact="event.object"/>
                        <set_value name="$responding" exact="null"/>
                        <set_value name="$idling" exact="null"/>
                        <abort_called_scripts resume="start"/>
                    </do_if>
                </do_if>
            </actions>
        </handler>
    </interrupts>
    <!--INIT-->
    <init>
        <debug_text text="'SHIB Reaction Force - %s - INIT'.[this.ship.knownname]"/>
        <set_value name="$started" exact="player.age"/>
        <set_value name="$responseTime" exact="null"/>
        <set_value name="$responseTarget" exact="null"/>
        <set_value name="$responding" exact="null"/>
        <set_value name="$idling" exact="null"/>
        <set_order_syncpoint_reached order="this.ship.order"/>
    </init>
    <attention min="unknown">
        <actions>
            <label name="start"/>
            <!-- Handle if response target is set -->
            <do_if value="$responseTarget != null">
                <!-- If not already dispatched -->
                <do_if value="$responding == null or not this.ship.orders.count" chance="this.ship.pilot.skill.piloting * 20">
                    <cancel_all_orders object="this.ship"/>
                    <!-- Check response target -->
                    <set_value name="$clearResponse" exact="null"/>
                    <!-- Dead response target -->
                    <do_if value="not $responseTarget.exists">
                        <set_value name="$clearResponse" exact="true"/>
                    </do_if>
                    <!-- No longer damaged enough -->
                    <do_elseif value="($responseTarget.isclass.station and $stationResponse == true and ($responseTarget.hullpercentage + $responseTarget.shieldpercentage) gt ($hpCutoffStation + ($hpCutoffStation * ($responseTarget.maxshield != 0)))) or
                ($responseTarget.isclass.ship and $shipResponse == true and ($responseTarget.hullpercentage + $responseTarget.shieldpercentage) gt ($hpCutoffShip + ($hpCutoffShip * ($responseTarget.maxshield != 0))))">
                        <set_value name="$clearResponse" exact="true"/>
                    </do_elseif>
                    <!-- If response needs to be cleared do so -->
                    <do_if value="$clearResponse">
                        <debug_text text="'SHIB Reaction Force - %s - No longer responding to %s'.[this.ship.knownname, $responseTarget.knownname]"/>
                        <set_value name="$responseTime" exact="null"/>
                        <set_value name="$responding" exact="null"/>
                        <set_value name="$responseTarget" exact="null"/>
                        <set_value name="$idling" exact="null"/>
                    </do_if>
                    <do_else>
                        <!-- Get some XP for responding -->
                        <apply_experience entity="this" experience="'ship_disable_easy'" chance="20"/>
                        <set_value name="$responseTime" exact="player.age"/>
                        <!-- Handle notifications/Log -->
                        <do_if value="$notifyMe">
                            <show_notification text="'REACTION FORCE:\n%s has been dispatched to %s'.[this.ship.knownname, $responseTarget.knownname]" priority="9"/>
                        </do_if>
                        <write_to_logbook category="alerts" title="'REACTION FORCE DISPATCHED:'" text="'REACTION FORCE:\n%s has been dispatched to %s in %s'.[this.ship.knownname, $responseTarget.knownname, $responseTarget.sector.knownname]"/>
                        <set_value name="$responding" exact="true"/>
                        <set_value name="$responseTime" exact="player.age"/>
                        <set_value name="$idling" exact="null"/>
                        <!-- If it's a station protect the station -->
                        <do_if value="$responseTarget.isclass.station">
                            <debug_text text="'SHIB Reaction Force - %s - Responding to Station %s'.[this.ship.knownname, $responseTarget.knownname]"/>
                            <create_order object="this.ship" id="'ProtectStation'">
                                <param name="station" value="$responseTarget"/>
                                <param name="timeout" value="300s"/>
                            </create_order>
                        </do_if>
                        <!-- If it's a ship protect the ship -->
                        <do_elseif value="$responseTarget.isclass.ship">
                            <debug_text text="'SHIB Reaction Force - %s - Responding to Ship %s'.[this.ship.knownname, $responseTarget.knownname]"/>
                            <create_order object="this.ship" id="'ProtectShip'">
                                <param name="target" value="$responseTarget"/>
                                <param name="timeout" value="300s"/>
                            </create_order>
                        </do_elseif>
                    </do_else>
                </do_if>
            </do_if>
            <!-- If no response target it set and ship doesn't already have idle orders -->
            <do_elseif value="$idling == null and $responseTarget == null">
                <debug_text text="'SHIB Reaction Force - %s - IDLE'.[this.ship.knownname]"/>
                <set_value name="$responseTime" exact="null"/>
                <set_value name="$responding" exact="null"/>
                <set_value name="$idling" exact="true"/>
                <!-- If home is a station -->
                <do_if value="not $home.isclass.space and ((this.ship.isclass.[class.ship_s, class.ship_xs] and $home.isclass.[class.station, class.ship_m, class.ship_l, class.ship_xl]) or (this.ship.isclass.[class.ship_m] and $home.isclass.[class.station, class.ship_l, class.ship_xl]))">
                    <!-- If you should dock do so -->
                    <do_if value="$dockWhenIdle == true">
                        <do_if value="this.ship.assigneddock == null or this.ship.assigneddock.knownname != $home.knownname">
                            <debug_text text="'SHIB Reaction Force - %s - Dock And Wait'.[this.ship.knownname]"/>
                            <set_command command="command.dockat" param="$home"/>
                            <run_script name="'order.dock'">
                                <param name="destination" value="$home"/>
                                <param name="dockfollowers" value="true"/>
                            </run_script>
                        </do_if>
                    </do_if>
                    <!-- Otherwise protect your home station -->
                    <do_elseif value="$home.isclass.station">
                        <debug_text text="'SHIB Reaction Force - %s - Idle Station Guard'.[this.ship.knownname]"/>
                        <set_command command="command.protect" param="$home"/>
                        <run_script name="'order.fight.protect.station'">
                            <param name="station" value="$home"/>
                        </run_script>
                    </do_elseif>
                    <do_elseif value="$home.isclass.ship">
                        <debug_text text="'SHIB Reaction Force - %s - Idle Station Guard'.[this.ship.knownname]"/>
                        <set_command command="command.protect" param="$home"/>
                        <run_script name="'order.fight.protect.ship'">
                            <param name="target" value="$home"/>
                        </run_script>
                    </do_elseif>
                </do_if>
                <!-- If home is a sector patrol the sector -->
                <do_else>
                    <debug_text text="'SHIB Reaction Force - %s - Idle Sector Patrol'.[this.ship.knownname]"/>
                    <set_command command="command.patrol"/>
                    <run_script name="'order.fight.patrol'">
                        <param name="space" value="$home"/>
                    </run_script>
                </do_else>
            </do_elseif>
            <wait exact="5s"/>
            <resume label="start"/>
        </actions>
    </attention>
</aiscript>